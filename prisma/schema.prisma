// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String     @unique
  password    String
  workspaceId String? // null = not in workspace
  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  messages    Message[]
  tasks Task[]
  role        UserRole   @default(MEMBER)
}

model Workspace {
  id         String    @id @default(uuid())
  name       String
  inviteCode String    @unique
  users      User[]
  channels   Channel[]
  createdAt  DateTime  @default(now())
}

model Channel {
  id          Int       @id @default(autoincrement())
  name        String
  messages    Message[]
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  tasks Task[]
  createdAt   DateTime  @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  channelId Int
  Channel   Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id Int @unique @default(autoincrement())
  name String
  assigneeId Int?
  assignee User? @relation(fields: [assigneeId], references: [id])
  channelId Int
  channel Channel @relation(fields: [channelId], references: [id])
  priority TaskPriority @default(MEDIUM)
  status TaskStatus @default(TO_DO)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
}

enum UserRole {
  MEMBER
  ADMIN
  OWNER
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGI
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  DONE
}
